// Functions

// Functions are blocks of code that can be reused. They can take arguments and return values.
// To write a function, use the `fn` keyword followed by the function name and parentheses.
// Inside the parentheses, you can specify the arguments the function takes.
// The body of the function is enclosed in curly braces.
fn add(a, b) {
    return a + b;
}
// Flare is a weakly typed language, so you don't need to specify the types of the arguments or the return value.

// Flare function arguments are always copied by value, so if you pass an object to a function,
// the function will receive a copy of the object, not a reference to the original object.
// This means that if you modify the object inside the function, the original object will not be affected.

let x = 10;

fn modify(obj) {
    obj = 20;
}

modify(x); // x is still 10
