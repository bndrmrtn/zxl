// Iter namespace
// This file is part of the Zx programming language project.
// It contains the iter namespace for the Zx language runtime.
namespace iter;

// KeyValue is a simple key-value pair structure
define KeyValue {
    let key;
    let value;

    fn construct(key, value) {
        this.key = key;
        this.value = value;
    }
}

// Array is a function that takes an array and returns a list of KeyValue pairs
fn Array(input) {
    if type(input) != "<Object:array>" {
        fail("iter.Array: input must be an array");
    }

    let li = [];

    for key in input.keys {
        li.append(KeyValue(key, input[key]));
    }

    return li;
}

// List is a function that takes a list and returns a list of KeyValue pairs
fn List(input) {
    if type(input) != "<Object:list>" {
        fail("iter.List only accepts list");
    }

    let li = [];

    for i in input.length {
        li.append(KeyValue(i, input[i]));
    }

    return li;
}